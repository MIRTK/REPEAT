#!/bin/bash

## Generate parameters for MIRTK 'register' command
## using asymmetric energy formulation and FFD model
regid="$(basename "${BASH_SOURCE/.gen}")"
parcsv="$(dirname "$BASH_SOURCE")/$regid.csv"

# attention: must be in single quotes; each column entry must be '$name'
cfgrow='$cfgid,$usemsk,$usepad,$roi,$interp,$optim,$linesearch,$divini,$srcgrd,$ffdgrd,$passdof,$conjtot,$levels,$iters,$steps,$rejects,$lastn,$epsilon,$sim,$bins,$padbins,$window,$ds,$be,$tp,$vp,$jaceps,$gamma'

# initial/constant parameter values
set_defaults()
{
  usemsk=true
  usepad=true
  roi='Union'
  interp='Linear'
  optim='ConjugateGradientDescent'
  linesearch='Adaptive'
  divini=false
  srcgrd=true
  ffdgrd='Analytic'
  passdof=false
  conjtot=true
  levels=3
  iters=100
  steps=20
  rejects=2
  lastn=10
  epsilon=0.0001
  sim='NMI'
  bins=64
  padbins=false
  window=5
  ds=2.5
  be=0
  tp=0
  vp=0
  jaceps=0.1
  gamma=0.5
}

# auxiliary function to append row with parameter values
append_row()
{
  let i++
  local cfgid=$(printf %04d $i)
  eval "echo \"$cfgrow\"" >> "$parcsv"
}

# write header and initialize row counter
echo "${cfgrow//$}" > "$parcsv"
i=0

# ------------------------------------------------------------------------------


be_vals=(0.001 0.005)
vp_vals=(0 0.001 0.01)
tp_vals=(0 0.0001 0.001)
le_mu_vals=(0 0.001 0.01 0.1)
le_lambda_vals=(0 0.001 0.01 0.1)

set_defaults
iters=500  # max. iterations should not be reason to stop
epsilon=0
for be in ${be_vals[@]}; do
  for vp in ${vp_vals[@]}; do
    for tp in ${tp_vals[@]}; do
      for le_rot in true false; do
        le_lambda=0
        for le_mu in ${le_mu_vals[@]}; do
          if [ "$le_mu" = '0' -a "$le_lambda" = '0' ]; then
            le=0
          else
            le=1
          fi
          append_row
        done
        le_mu=0
        for le_lambda in ${le_lambda_vals[@]}; do
          if [ "$le_mu" = '0' -a "$le_lambda" = '0' ]; then
            le=0
          else
            le=1
          fi
          append_row
        done
      done
    done
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests to more narrow ranges found to perform well.
exit 0
