#!/bin/bash

## Generate parameters for MIRTK 'register' command
## using asymmetric energy formulation and FFD model
regid="$(basename "${BASH_SOURCE/.gen}")"
parcsv="$(dirname "$BASH_SOURCE")/$regid.csv"

# attention: must be in single quotes; each column entry must be '$name'
cfgrow='$cfgid,$usemsk,$usepad,$roi,$interp,$optim,$linesearch,$divini,$srcgrd,$ffdgrd,$passdof,$conjtot,$levels,$iters,$steps,$rejects,$lastn,$epsilon,$sim,$bins,$padbins,$window,$ds,$be,$tp,$vp,$jaceps,$gamma'

# initial/constant parameter values
set_defaults()
{
  usemsk=true
  usepad=true
  roi='Union'
  interp='Linear'
  optim='ConjugateGradientDescent'
  linesearch='Adaptive'
  divini=false
  srcgrd=true
  ffdgrd='Analytic'
  passdof=false
  conjtot=true
  levels=3
  iters=100
  steps=20
  rejects=2
  lastn=10
  epsilon=0.0001
  sim='NMI'
  bins=64
  padbins=false
  window=5
  ds=2.5
  be=0
  tp=0
  vp=0
  jaceps=0.1
  gamma=0.5
}

# auxiliary function to append row with parameter values
append_row()
{
  let i++
  local cfgid=$(printf %04d $i)
  eval "echo \"$cfgrow\"" >> "$parcsv"
}

# write header and initialize row counter
echo "${cfgrow//$}" > "$parcsv"
i=0

# ------------------------------------------------------------------------------
# 1) determine optimal range of bending energy weight
set_defaults
iters=500  # max. iterations should not be reason to stop
epsilon=0
for be in 0 0.00001 0.0001 0.0005 0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01 0.05; do
  append_row
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests to more narrow ranges found to perform well.
#exit 0


# ------------------------------------------------------------------------------
# 2) advanced options

iters=100
steps=12
rejects=12
lastn=0
epsilon=0
for passdof in false true; do
  for conjtot in false true; do
    for ffdgrd in 'Analytic' 'DMFFD' 'Convolution'; do
      for be in 0.0005 0.001 0.002 0.003 0.005; do
        append_row
      done
    done
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests to more narrow ranges found to perform well.
#exit 0

set_defaults2()
{
  set_defaults
  iters=100
  steps=12
  rejects=12
  lastn=0
  epsilon=0
  passdof=true
  conjtot=true
  ffdgrd='DMFFD'
}

be_vals=(0.001 0.002 0.003 0.005)

# ------------------------------------------------------------------------------
# Add penalties for non-positive (and large) Jacobian determinant values

set_defaults2

# 3a) using topology preservation penalty for det(J) < gamma
vp=0
for be in ${be_vals[@]}; do
  for jaceps in 0.0000001 0.01 0.1; do
    for tp in 0.00001 0.0001 0.001 0.01 0.1; do
      append_row
    done
  done
done

# 3b) using volume preservation penalty, i.e., sq(log(det(J)))
tp=0
for be in ${be_vals[@]}; do
  for jaceps in 0.0000001 0.01 0.1; do
    for vp in 0.00001 0.0001 0.001 0.01 0.1; do
      append_row
    done
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests according to previous results.
#exit 0

vp_vals=(0.00001 0.0001 0.001 0.1)
tp_vals=(0.0001 0.001 0.01)

# 3c) using both topology and volume preservation penalties
jaceps=0.1
for be in ${be_vals[@]}; do
  for vp in ${vp_vals[@]}; do
    for tp in ${tp_vals[@]}; do
      append_row
    done
  done
done


# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests according to previous results.
#exit 0

set_defaults3()
{
  set_defaults2
  gamma=0.5
  jaceps=0.1
  be=0.003
  vp=0.0001
  tp=0.0001
}

# ------------------------------------------------------------------------------
# Final tests

# 4a) Compare best result for different gradient calculations
set_defaults3
for be in ${be_vals[@]}; do
  for srcgrd in false true; do
    for ffdgrd in 'Analytic' 'DMFFD' 'Convolution'; do
      append_row
    done
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests according to previous results.
#exit 0


# 4b) Whether to constrain passive CPs
set_defaults3
srcgrd=false
ffdgrd='DMFFD'
for passdof in false true; do
  for be in ${be_vals[@]}; do
    append_row
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests according to previous results.
#exit 0


# 4c) Whether to use padding value
set_defaults3
passdof=true
srcgrd=false
for ffdgrd in 'Analytic' 'DMFFD'
  for usepad in false true; do
    for be in ${be_vals[@]}; do
      append_row
    done
  done
done
