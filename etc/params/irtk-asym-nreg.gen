#!/bin/bash

## Generate configuration files for IRTK 'nreg' command
regid="$(basename "$BASH_SOURCE")"
regid="${regid/.gen}"

# load settings and auxiliary functions
. "$(dirname "$BASH_SOURCE")/../../etc/settings.sh" || exit 1
[ -n "$topdir" ] || error "etc/settings.sh: topdir not set"
[ -n "$cfgdir" ] || error "etc/settings.sh: cfgdir not set"

# change to top-level directory
run cd "$topdir"

# create output directory
makedir "$cfgdir"

# initial/constant parameter values
interp='Linear'
optim='GradientDescent'
levels=4
iters=10
steps=4
step=1
epsilon=0.0001
sim='NMI'
bins=64
ds=20     # initial control point spacing!

# auxiliary function to append row with parameter values
# Attention: Always ensure that header and order of values is consistent!
i=0
parcsv="$cfgdir/$regid.csv"
echo "cfgid,interp,optim,levels,iters,steps,step,epsilon,sim,bins,ds,be,tp,vp" > "$parcsv"

append_row()
{
  let i++
  local cfgid=$(printf %04d $i)
  echo "$cfgid,$interp,$optim,$levels,$iters,$steps,$step,$epsilon,$sim,$bins,$ds,$be,$tp,$vp" >> "$parcsv"
}

# initial parameter exploration
for be in 0 0.00001 0.00005 0.0001 0.0005 0.001 0.005; do
  vp=0
  for tp in 0 0.0001 0.001 0.005 0.01 0.05; do
    append_row
  done
  tp=0
  for vp in 0 0.0001 0.001 0.005 0.01 0.05; do
    append_row
  done
done

# use different optimization method
# (ConjugateGradientDescent should be better than GradientDescent, but slower)
