#!/bin/bash

## Generate command-line arguments for NiftyReg 'reg_f3d' command
regid="$(basename "${BASH_SOURCE/.gen}")"
parcsv="$(dirname "$BASH_SOURCE")/$regid.csv"

# attention: must be in single quotes; each column entry must be '$name'
cfgrow='$cfgid,$sim,$bins,$levels,$maxit,$ds,$be,$jl,$le,$l2'
vel=false  # constant (unused)

# initial/constant parameter values
set_defaults()
{
  sim='NMI'
  bins=64
  levels=3
  maxit=300
  ds=2.5
  be=0.005
  jl=0
  le='0 0'
  l2=0
}

# auxiliary function to append row with parameter values
append_row()
{
  let i++
  local cfgid=$(printf %04d $i)
  eval "echo \"$cfgrow\"" >> "$parcsv"
}

# write header and initialize row counter
echo "${cfgrow//$}" > "$parcsv"
i=0

# ------------------------------------------------------------------------------
# 1. exploration of penalty weights

# 1a) bending energy and Jacobian based penalty
set_defaults
for be in 0 0.0001 0.0005 0.001 0.005 0.01 0.05; do
  for jl in 0 0.00001 0.0001 0.0005 0.001 0.005 0.01 0.05; do
    append_row
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests to more narrow ranges found to perform well.
#exit 0

be_vals=(0.001 0.005 0.01)
jl_vals=(0.0001 0.01)

# 1b) linear energy, i.e., sum of squared first order derivatives
be=0
jl=0
for le1 in 0 0.0001 0.001 0.01 0.1; do
  for le2 in 0 0.0001 0.001 0.01 0.1; do
    if [ "$le1" != 0 -o "$le2" != 0 ]; then
      le="$le1 $le2"
      append_row
    fi
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests to more narrow ranges found to perform well.
#exit 0

# 1c) combine bending energy, Jacobian based penalty, and linear elasticity penalties

