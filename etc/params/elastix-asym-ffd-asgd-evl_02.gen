#!/bin/bash

## Generate command-line arguments for elastix using ASGD
regid="$(basename "${BASH_SOURCE/.gen}")"
parcsv="$(dirname "$BASH_SOURCE")/$regid.csv"

# attention: must be in single quotes; each column entry must be '$name'
cfgrow='$cfgid,$usemsk,$srcmsk,$interp,$pyramid,$sim,$bins,$iters,$step,$adaptive,$auto,$alpha,$A,$a,$ds,$be'

# initial/constant parameter values
set_defaults()
{
  # initial/constant parameter values
  usemsk=true                        # whether to use foreground masks
  srcmsk=false                       # using both masks worked, but Stefan Klein recommends without:
                                     # http://lists.bigr.nl/pipermail/elastix/2014-February/001370.html
  interp='Linear'                    # Linear, BSpline
  pyramid='Recursive'                # Recursive, Smoothing, Shrinking
  sim='NormalizedMutualInformation'  # NormalizedMutualInformation, AdvancedMattesMutualInformation
  bins=64                            # 16, 32, 64

  # optimization paramaters
  iters=500
  step='4.0 2.0 1.0 0.5'
  adaptive=true
  auto=false
  alpha=1.0
  A=20
  a=1000

  # transformation model parameters
  ds=5
  be=0.1
}

# auxiliary function to append row with parameter values
append_row()
{
  let i++
  local cfgid=$(printf %04d $i)
  eval "echo \"$cfgrow\"" >> "$parcsv"
}

# write header and initialize row counter
echo "${cfgrow//$}" > "$parcsv"
i=0

# ------------------------------------------------------------------------------
# 1) explore bending energy weight using automatic parameter selection
set_defaults
auto=true
for srcmsk in false true; do
  for ds in 5.0 2.5; do
    for be in 0 0.001 0.01 0.1 1 2; do
      append_row
    done
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests to more narrow ranges found to perform well.
#exit 0

ds_vals=(2.5 5.0)
be_vals=(0 0.01 0.1)

# for alberts-tune dataset, these settings resulted in 0.25% non-positive Jacobians
# also good, but with higher StDev: ds=5, be=0 (0% non-positive Jacobians)
set_new_defaults1()
{
  set_defaults
  srcmsk=true # made no difference, using it very slightly better
  ds=2.5
  be=0.1
}


# ------------------------------------------------------------------------------
# 2) explore maximum step and A parameter settings

set_new_defaults1
auto=true

ds=5
be=0
for A in 10 20 30 50; do
  for step in '0.5' '4.0 2.0 1.0 0.5' '1.0'; do
    append_row
  done
done

ds=2.5
be=0.1
for A in 10 20 30 50; do
  for step in '0.5' '4.0 2.0 1.0 0.5' '1.0'; do
    append_row
  done
done

# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests to more narrow ranges found to perform well.
#exit 0

set_new_defaults2()
{
  set_new_defaults1
  ds=2.5
  be=0.1
  A=50
  a='50000 100000 200000 500000'
  step=0.5
}

# ------------------------------------------------------------------------------
# 3) manual exploration of parameters with more informed ds, be, A, and a values

set_new_defaults2
auto=false
for ds in ${ds_vals[@]}; do
  if [ "$ds" = '5.0' ]; then
    step=1 # better for ds=5
  else
    step=0.5
  fi
  for be in ${be_vals[@]}; do
    for iters in 100 300 500 1000; do
      append_row
    done
  done
done
