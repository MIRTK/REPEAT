#!/bin/bash

## Generate configuration files for MIRTK 'register' command
## using asymmetric energy formulation and classic FFD model
regid="$(basename "${BASH_SOURCE/.gen}")"
parcsv="$(dirname "$BASH_SOURCE")/$regid.csv"

# attention: must be in single quotes; each column entry must be '$name'
cfgrow='$cfgid,$usemsk,$usepad,$roi,$interp,$optim,$linesearch,$divini,$srcgrd,$ffdgrd,$passdof,$conjtot,$levels,$iters,$steps,$rejects,$lastn,$epsilon,$sim,$bins,$padbins,$window,$ds,$be,$tp,$vp,$jaceps,$gamma'

# initial/constant parameter values
set_defaults()
{
  usemsk=false
  usepad=true
  roi='Union'
  interp='Linear'
  optim='ConjugateGradientDescent'
  linesearch='Adaptive'
  divini=false
  srcgrd=true
  ffdgrd='Analytic'
  passdof=false
  conjtot=true
  levels=4
  iters=100
  steps=20
  rejects=2
  lastn=10
  epsilon=0.0001
  sim='NMI'
  bins=64
  padbins=false
  window=5
  ds=2.5
  be=0
  tp=0
  vp=0
  jaceps=0.1
  gamma=0.5
}

# auxiliary function to append row with parameter values
append_row()
{
  let i++
  local cfgid=$(printf %04d $i)
  eval "echo \"$cfgrow\"" >> "$parcsv"
}

# write header and initialize row counter
echo "${cfgrow//$}" > "$parcsv"
i=0

# ------------------------------------------------------------------------------
# 1) determine optimal range of bending energy weight
set_defaults
iters=300  # max. iterations should not be reason to stop
for be in 0.0001 0.0005 0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01 0.05; do
  append_row
done
for be in 0 0.00001; do
  append_row
done


# ------------------------------------------------------------------------------
# Explore advanced implementation specific options

# 2a) default MIRTK gradient calculation vs. NiftyReg-like convolution
iters=100
for passdof in false true; do
  for conjtot in false true; do
    for ffdgrd in 'Analytic' 'Convolution'; do
      for be in 0 0.00001 0.0001 0.0005 0.001 0.005 0.01; do
        append_row
      done
    done
  done
done

# 2b) a few more tests where also other settings reflect NiftyReg implementation more closely
usemsk=true
usepad=false
srcgrd=false
epsilon=0
roi='Overlap'
padbins=true
levels=3
iters=100
steps=12
rejects=12
lastn=0
for passdof in false true; do
  for conjtot in false true; do
    for ffdgrd in 'Analytic' 'Convolution'; do
      for be in 0.0001 0.0005 0.001; do
        append_row
      done
    done
  done
done

# 2c) ANTs-like gradient calcuation, i.e., directly manipulated free-form deformation
set_defaults
ffdgrd='DMFFD'
for be in 0 0.00001 0.0001 0.0005 0.001 0.005 0.01; do
  append_row
done

# ------------------------------------------------------------------------------
# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests to more narrow ranges found to perform well.
#exit 0

# interim conclusion: MIRTK default settings work best; hence, restore these
set_defaults
be_vals=(0.0001 0.0005 0.001)

# ------------------------------------------------------------------------------
# 3) dealing with background in brain extracted images
for be in ${be_vals[@]}; do
  for usemsk in false true; do
    for usepad in false true; do
      for roi in 'Overlap' 'Union' 'Target' 'Domain'; do
        if [ $roi != 'Domain' -a $usemsk = false -a $usepad = false ]; then
          continue  # background not used, i.e., Overlap=Union=Target=Domain
        fi
        if [ $roi = 'Domain' -a $usemsk = true ]; then
          continue  # mask not used
        fi
        append_row
      done
    done
  done
done

# ------------------------------------------------------------------------------
# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests according to previous results.
#exit 0

set_defaults
usemsk=true
usepad=true
roi='Union'

# ------------------------------------------------------------------------------
# Add penalties for non-positive (and large) Jacobian determinant values

# 4a) using topology preservation penalty for det(J) < gamma
for be in ${be_vals[@]}; do
  for gamma in 0.3 0.5; do
    for jaceps in 0.0000001 0.001 0.01 0.1; do
      for tp in 0.00001 0.0001 0.001 0.01; do
        append_row
      done
    done
  done
done

gamma=0.5
jaceps=0.1
for be in ${be_vals[@]}; do
  for tp in 0.1 0.5 1 2; do
    append_row
  done
done

# 4b) using volume preservation penalty, i.e., sq(log(det(J)))
tp=0
gamma=0.5
for be in ${be_vals[@]}; do
  for jaceps in 0.0000001 0.001 0.01 0.1; do
    for vp in 0.00001 0.0001 0.001 0.01; do
      append_row
    done
  done
done

gamma=0.5
jaceps=0.1
for be in ${be_vals[@]}; do
  for vp in 0.1 0.5 1 2; do
    append_row
  done
done

# 4c) using both topology and volume preservation penalties
gamma=0.5
jaceps=0.1
for be in ${be_vals[@]}; do
  for vp in 0.001 0.01 0.1; do
    for tp in 0.001 0.01 0.1 0.5; do
      append_row
    done
  done
done


# ------------------------------------------------------------------------------
# Comment following line when previous tests are done, and the results have been analyzed.
# Adjust parameters for following tests according to previous results.
#exit 0

set_new_defaults()
{
  set_defaults
  usemsk=true
  usepad=true
  roi='Union'
  gamma=0.5
  jaceps=0.1
  be=0.0005
  vp=0.001
  tp=0.001
}

# ------------------------------------------------------------------------------
# Fine tuning

# 5. Last time, compare best result for different gradient calculations
# 5a) Using previous background options
set_new_defaults
for srcgrd in false true; do
  for ffdgrd in 'Analytic' 'Convolution' 'DMFFD'; do
    append_row
  done
done

# 5b) Use alternative background settings found to perform well as part of 3)
set_new_defaults
usemsk=false
usepad=false
roi='Domain'
for srcgrd in false true; do
  for ffdgrd in 'Analytic' 'Convolution' 'DMFFD'; do
    append_row
  done
done
